void main
(
  float4 iPosition : POSITION, //in object space
  float3 iNormal : NORMAL, //in object space
  float2 iTexCoord0 : TEXCOORD0,
    float2               iLodpos             : BLENDWEIGHT,

  out float4 oPosition : POSITION, //in projection space
  out float2 oTexCoord0 : TEXCOORD0, 
  out float3 oNormal : TEXCOORD1, //in object space
  out float3 oLightVector : TEXCOORD2,
  out float oDist : TEXCOORD3,
  
  uniform float4x4 worldViewProj,
  uniform float3 lightPosition, //in object space
  uniform float4 compressionSettings
)
{
    // pass normal
    oNormal = iNormal;

    oTexCoord0 = iTexCoord0;

    // Calculate the output position and texture coordinates using textures coordinates input.
    float height = ((iPosition.x + 32768) + (iLodpos.x - iPosition.x) * compressionSettings[3]) * compressionSettings[1];
    oPosition = float4(iTexCoord0.x * compressionSettings[0], height, iTexCoord0.y * compressionSettings[2], 1.0f);
            
    // compute light vector
    float3 aux = lightPosition - oPosition.xyz;
    oDist = length(aux);

    // pass light vector
    oLightVector = normalize(aux);

    // transform position to projection space
    oPosition = mul(worldViewProj, oPosition);
}
