void main
(
  float4 iPosition : POSITION,
  float4 iNormal : NORMAL,
  float2 iTexCoord0 : TEXCOORD0,
    float2               iLodpos             : BLENDWEIGHT,

  out float4 oPosition : POSITION, //in projection space
  out float2 oTexCoord0 : TEXCOORD0, 
  out float4 oColor : COLOR,
          
  uniform float4x4 worldViewProj,
  uniform float3 lightPosition, //in object space
  uniform float4 lightDiffuse,
  uniform float4 matDiffuse,
  uniform float4 compressionSettings
)
{
  float3 n = normalize(iNormal);
  float3 lightVector = normalize(lightPosition);
  float nDotL = max(dot(n, lightVector),0.0);
  
  float4 color = float4(0.0, 0.0, 0.0, 0.0);
  
  if(nDotL > 0.0) 
  {

    //add diffuse light from material and light
    color += lightDiffuse * matDiffuse * nDotL;
  }
          
  oColor = color;

  oTexCoord0 = iTexCoord0;
  
  // Calculate the output position and texture coordinates using textures coordinates input.
  float height = ((iPosition.x + 32768) + (iLodpos.x - iPosition.x) * compressionSettings[3]) * compressionSettings[1];
  oPosition = float4(iTexCoord0.x * compressionSettings[0], height, iTexCoord0.y * compressionSettings[2], 1.0f);

  // transform position to projection space
  oPosition = mul(worldViewProj, oPosition);
    
}
