Index: include/OGRE/OgreAtomicWrappers.h
===================================================================
--- include/OGRE/OgreAtomicWrappers.h	(revision 8145)
+++ include/OGRE/OgreAtomicWrappers.h	(working copy)
@@ -170,7 +170,7 @@
 
 }
 
- #elif OGRE_COMPILER == OGRE_COMPILER_MSVC && OGRE_THREAD_SUPPORT
+ #elif OGRE_COMPILER == OGRE_COMPILER_MSVC && OGRE_THREAD_SUPPORT && ! defined(__PYTHONOGRE_BUILD_CODE)
 
 #undef NOMINMAX
 #define NOMINMAX
Index: include/OGRE/OgreStdHeaders.h
===================================================================
--- include/OGRE/OgreStdHeaders.h	(revision 8145)
+++ include/OGRE/OgreStdHeaders.h	(working copy)
@@ -36,7 +36,7 @@
 // Note - not in the original STL, but exists in SGI STL and STLport
 // For gcc 4.3 see http://gcc.gnu.org/gcc-4.3/changes.html
 #if (OGRE_COMPILER == OGRE_COMPILER_GNUC) && !defined(STLPORT)
-#   if OGRE_COMP_VER >= 430
+#   if OGRE_COMP_VER >= 430 && !(defined __PYTHONOGRE_BUILD_CODE)
 #       include <tr1/unordered_map>
 #       include <tr1/unordered_set> 
 #   else
Index: include/OGRE/OgrePrerequisites.h
===================================================================
--- include/OGRE/OgrePrerequisites.h	(revision 8145)
+++ include/OGRE/OgrePrerequisites.h	(working copy)
@@ -121,7 +121,7 @@
     #endif
 
     #if OGRE_COMPILER == OGRE_COMPILER_GNUC && OGRE_COMP_VER >= 310 && !defined(STLPORT)
-	#   if OGRE_COMP_VER >= 430
+	#   if OGRE_COMP_VER >= 430 && !defined(__PYTHONOGRE_BUILD_CODE)
 	#       define HashMap ::std::tr1::unordered_map
 	#		define HashSet ::std::tr1::unordered_set
 	#    else
Index: include/OGRE/OgreString.h
===================================================================
--- include/OGRE/OgreString.h	(revision 8145)
+++ include/OGRE/OgreString.h	(working copy)
@@ -35,7 +35,7 @@
 #if OGRE_COMPILER == OGRE_COMPILER_GNUC && OGRE_COMP_VER >= 310 && !defined(STLPORT)
 
 // For gcc 4.3 see http://gcc.gnu.org/gcc-4.3/changes.html
-#   if OGRE_COMP_VER >= 430
+#   if OGRE_COMP_VER >= 430 && !defined (__PYTHONOGRE_BUILD_CODE)
 #       include <tr1/unordered_map> 
 #   else
 #       include <ext/hash_map>
@@ -158,7 +158,7 @@
 
 
 #if OGRE_COMPILER == OGRE_COMPILER_GNUC && OGRE_COMP_VER >= 310 && !defined(STLPORT)
-#   if OGRE_COMP_VER < 430
+#   if OGRE_COMP_VER < 430 || defined (__PYTHONOGRE_BUILD_CODE)
 	typedef ::__gnu_cxx::hash< _StringBase > _StringHash;
 #   else
 	typedef ::std::tr1::hash< _StringBase > _StringHash;
Index: PythonOgreConfig_system.py
===================================================================
--- PythonOgreConfig_system.py	(revision 914)
+++ PythonOgreConfig_system.py	(working copy)
@@ -107,7 +107,7 @@
 PATH_LIB_pcz = os.path.join(PATH_LIB_Ogre_OgreMain, 'OGRE')
 
 
-PATH_INCLUDE_Ogre=          os.path.join(LOCAL_INCLUDE,'OGRE')  # os.path.join(PATH_Ogre,'OgreMain/include') 
+PATH_INCLUDE_Ogre=          os.path.join(os.path.dirname(__file__), 'include/OGRE')  # os.path.join(PATH_Ogre,'OgreMain/include') 
 PATH_INCLUDE_Ogre_Dependencies =    PATH_INCLUDE_Ogre #      os.path.join( PATH_Ogre, 'Dependencies/include')
 
 PATH_INCLUDE_OIS =          os.path.join(LOCAL_INCLUDE,'OIS') #os.path.join(PATH_OIS,'includes')    ## Note the plural include's
@@ -133,7 +133,7 @@
 PATH_INCLUDE_OgreOdePrefab= os.path.join( PATH_OgreOde,'prefab/include')
 PATH_INCLUDE_OgreOdeLoader= os.path.join( PATH_OgreOde,'loader/include')
 PATH_INCLUDE_FMOD =  ""
-PATH_INCLUDE_Ogre_CEGUIRenderer = os.path.join(BASE_DIR, 'include', 'OGRE')
+PATH_INCLUDE_Ogre_CEGUIRenderer = os.path.join(os.path.dirname(__file__), 'include/OGRE')
 PATH_INCLUDE_quickgui =     PATH_quickgui
 PATH_INCLUDE_NxOgre=        PATH_NxOgre
 PATH_INCLUDE_NxOgre_09=        PATH_NxOgre_09
Index: environment.py
===================================================================
--- environment.py	(revision 944)
+++ environment.py	(working copy)
@@ -68,6 +68,7 @@
 PATH_Python = os.path.dirname( sys.executable )
 ## I want a version string 2.4 or 2.5 etc
 PythonVersionString = str(sys.version_info[0])+'.'+str(sys.version_info[1])
+PythonVersionStringNoDot = "py"+str(sys.version_info[0])+str(sys.version_info[1])
 
 if isWindows():
     python_include_dirs = os.path.join ( PATH_Python, 'include')
@@ -539,7 +540,7 @@
         import re
         gcc_version = re.search(r'([0-9]+?\.[0-9]+?\.[0-9]+?)', gccp.communicate()[0]).groups()[0].split('.')
         # FIXME: Should this be the multithreaded version!?
-        lib = "boost_python-gcc%s%s-mt-%s" % (gcc_version[0], gcc_version[1], versionBase)
+        lib = "boost_python-gcc%s%s-mt-%s-%s" % (gcc_version[0], gcc_version[1], versionBase, PythonVersionStringNoDot)
 
     if isMac():
         lib = Config.LIB_Boost
Index: environment.py
===================================================================
--- environment.py	(revision 944)
+++ environment.py	(working copy)
@@ -68,6 +68,7 @@
 PATH_Python = os.path.dirname( sys.executable )
 ## I want a version string 2.4 or 2.5 etc
 PythonVersionString = str(sys.version_info[0])+'.'+str(sys.version_info[1])
+PythonVersionStringNoDot = "py"+str(sys.version_info[0])+str(sys.version_info[1])
 
 if isWindows():
     python_include_dirs = os.path.join ( PATH_Python, 'include')
@@ -539,7 +540,7 @@
         import re
         gcc_version = re.search(r'([0-9]+?\.[0-9]+?\.[0-9]+?)', gccp.communicate()[0]).groups()[0].split('.')
         # FIXME: Should this be the multithreaded version!?
-        lib = "boost_python-gcc%s%s-mt-%s" % (gcc_version[0], gcc_version[1], versionBase)
+        lib = "boost_python-gcc%s%s-mt-%s-%s" % (gcc_version[0], gcc_version[1], versionBase, PythonVersionStringNoDot)
 
     if isMac():
        lib = Config.LIB_Boost
