[epydoc] # Epydoc section marker (required by ConfigParser)

# The list of objects to document.  Objects can be named using
# dotted names, module filenames, or package directory names.
# Alases for this option include "objects" and "values".
#modules: ogre
modules: ogre.renderer.OGRE, ogre.gui.CEGUI, ogre.gui.QuickGUI, ogre.sound.OgreAL, ogre.io.OIS, ogre.physics.OgreOde, ogre.physics.OgreNewt, ogre.physics.OgreRefApp, ogre.physics.ODE, ogre.physics.PhysX, ogre.physics.NxOgre, ogre.physics.bullet, ogre.physics.Opcode
#modules: ogre.sound.OgreAL

output: html
target: c:/temp/html/

verbosity: 0
debug: 0
simple-term: 0

### Generation options
docformat: javadoc

# Whether or not parsing should be used to examine objects.
parse: no

# Whether or not introspection should be used to examine objects.
introspect: yes


# The format for showing inheritance objects.
# It should be one of: 'grouped', 'listed', 'included'.
inheritance: included

imports: no
sourcecode: no
include-log: no

### Output options

# The documented project's name.
name: Python-Ogre

# The CSS stylesheet for HTML output.  Can be the name of a builtin
# stylesheet, or the name of a file.
css: white

# The documented project's URL.
url: http://python-ogre.org

# HTML code for the project link in the navigation bar.  If left
# unspecified, the project link will be generated based on the
# project's name and URL.
#link: <a href="somewhere">My Cool Project</a>

# The "top" page for the documentation.  Can be a URL, the name
# of a module or class, or one of the special names "trees.html",
# "indices.html", or "help.html"
#top: os.path

# Whether or not to include a frames-based table of contents.
frames: yes
