WARNING: Unable to find ode/ode.h include file (ode class) in include_dirs
WARNING: Unable to find ode/ode.h include file (ogrerefapp class) in include_dirs
WARNING: Unable to find ode/ode.h include file (ogreode class) in include_dirs
WARNING: Unable to find ode/odecpp.h include file (ogreode class) in include_dirs
WARNING: Unable to find Ogreode_Prefab.h include file (ogreode class) in include_dirs

INFO Parsing xml file "/home/andy/development/python-ogre/code_generators/cache/physx_2.7.2_cache.xml" ... 
Excluding static const  NX_NO_HIGH_LIMIT [variable]
Excluding static const  NX_NO_LOW_LIMIT [variable]
Excluding static const  NxInvPiF32 [variable]
Excluding static const  NxTwoPiF32 [variable]
Excluding static const  NxHalfPiF32 [variable]
Excluding static const  NxPiF32 [variable]
Excluding static const  NxInvPiF64 [variable]
Excluding static const  NxTwoPiF64 [variable]
Excluding static const  NxHalfPiF64 [variable]
Excluding static const  NxPiF64 [variable]
excluded NxForceFieldShapeDesc::type [variable] protected
excluded NxContactStreamIterator::pointNormalForce [variable] protected
excluded NxContactStreamIterator::stream [variable] protected
excluded NxContactStreamIterator::numPairs [variable] private
excluded NxContactStreamIterator::shapes [variable] private
excluded NxContactStreamIterator::shapeFlags [variable] private
excluded NxContactStreamIterator::numPatches [variable] private
excluded NxContactStreamIterator::patchNormal [variable] private
excluded NxContactStreamIterator::numPoints [variable] private
excluded NxContactStreamIterator::point [variable] private
excluded NxContactStreamIterator::separation [variable] private
excluded NxContactStreamIterator::featureIndex0 [variable] private
excluded NxContactStreamIterator::featureIndex1 [variable] private
excluded NxContactStreamIterator::numPairsRemaining [variable] private
excluded NxContactStreamIterator::numPatchesRemaining [variable] private
excluded NxContactStreamIterator::numPointsRemaining [variable] private
excluded NxShapeDesc::type [variable] protected
excluded NxEffectorDesc::type [variable] protected
excluded NxJointDesc::type [variable] protected
excluded NxActorDescBase::type [variable] protected
excluded NxFluidDescBase::type [variable] protected
excluded NxMat33::data [variable] private
excluded NxBitField::FlagRef::bitField [variable] private
excluded NxBitField::FlagRef::bitIndex [variable] private
excluded NxBitField::FlagRef::bitField [variable] private
excluded NxBitField::FlagRef::bitIndex [variable] private
excluded NxArray<NxFluidEmitterDesc, NxAllocatorDefault>::first [variable] private
excluded NxArray<NxFluidEmitterDesc, NxAllocatorDefault>::last [variable] private
excluded NxArray<NxFluidEmitterDesc, NxAllocatorDefault>::memEnd [variable] private
excluded NxArray<NxFluidEmitterDesc, NxAllocatorDefault>::allocator [variable] private
excluded NxArray<NxShapeDesc*, NxAllocatorDefault>::first [variable] private
excluded NxArray<NxShapeDesc*, NxAllocatorDefault>::last [variable] private
excluded NxArray<NxShapeDesc*, NxAllocatorDefault>::memEnd [variable] private
excluded NxArray<NxShapeDesc*, NxAllocatorDefault>::allocator [variable] private
excluded NxDebugRenderable::numPoints [variable] private
excluded NxDebugRenderable::numLines [variable] private
excluded NxDebugRenderable::numTriangles [variable] private
excluded NxDebugRenderable::points [variable] private
excluded NxDebugRenderable::lines [variable] private
excluded NxDebugRenderable::triangles [variable] private
excluding function ::NxArray<NxShapeDesc*, NxAllocatorDefault>::begin
excluding function ::NxArray<NxFluidEmitterDesc, NxAllocatorDefault>::deleteEntry
excluding function ::NxArray<NxShapeDesc*, NxAllocatorDefault>::end
excluding function ::NxCookingInterface::NxCreatePMap
excluding function ::NxForceField::releaseShape
excluding function ::NxUtilLib::NxGetBoxEdgesAxes
excluding function ::NxImplicitScreenMesh::getProjectionMatrix
excluding function ::NxVec3::get
excluding function ::NxBitField::rangeToDenseMask
excluding function ::NxBitField::maskToShift
Excluding: NxReal const * NxVec3::get() const [member function]
Excluding Operator: NxReal & NxMat33::operator()(int row, int col) [member operator]
CHECK  NxU32 NxUtilLib::NxRayCapsuleIntersect(NxVec3 const & origin, NxVec3 const & dir, NxCapsule const & capsule, NxReal * t) [member function] 3
CHECK  bool NxUtilLib::NxBuildSmoothNormals(NxU32 nbTris, NxU32 nbVerts, NxVec3 const * verts, unsigned int const * dFaces, NxU16 const * wFaces, NxVec3 * normals, bool flip=false) [member function] 3
CHECK  void NxImplicitScreenMesh::setProjectionMatrix(NxReal const * projection44) [member function] 0
CHECK  bool NxJoint::getNextLimitPlane(NxVec3 & planeNormal, NxReal & planeD, NxReal * restitution=0) [member function] 2
CHECK  void NxQuat::setWXYZ(NxReal const * d) [member function] 0
CHECK  void NxQuat::setXYZW(NxReal const * d) [member function] 0
CHECK  static NxU32 NxMath::hash(unsigned int const * k, NxU32 length) [member function] 0
Excluding:  NxVec3::NxVec3(NxReal const * v) [constructor]
Excluding:  NxDebugRenderable::NxDebugRenderable(NxU32 np, NxDebugPoint const * p, NxU32 nl, NxDebugLine const * l, NxU32 nt, NxDebugTriangle const * t) [constructor]
Excluding (function): unsigned int const * NxUtilLib::NxGetBoxEdges() [member function] as it returns (pointer) unsigned int
Excluding (function): unsigned int const * NxUtilLib::NxGetBoxTriangles() [member function] as it returns (pointer) unsigned int
Excluding (function): unsigned int const * NxUtilLib::NxGetBoxQuads() [member function] as it returns (pointer) unsigned int
Excluding (function): unsigned int const * NxUtilLib::NxBoxVertexToQuad(NxU32 vertexIndex) [member function] as it returns (pointer) unsigned int
Wrapped: NxFluidEmitter * * NxFluid::getEmitters() const [member function]
Wrapped: NxImplicitScreenMesh * * NxFluid::getScreenSurfaceMeshes() const [member function]
Wrapped: NxClothMesh * * NxPhysicsSDK::getClothMeshes() [member function]
Wrapped: NxSoftBodyMesh * * NxPhysicsSDK::getSoftBodyMeshes() [member function]
Wrapped: NxShape * const * NxActor::getShapes() const [member function]
Wrapped: NxForceField * * NxScene::getForceFields() [member function]
Wrapped: NxActor * * NxScene::getActors() [member function]
Wrapped: NxFluid * * NxScene::getFluids() [member function]
Wrapped: NxImplicitScreenMesh * * NxScene::getImplicitScreenMeshes() [member function]
Wrapped: NxCloth * * NxScene::getCloths() [member function]
Wrapped: NxSoftBody * * NxScene::getSoftBodies() [member function]
Excluded: NxShapeDesc * * NxArray<NxShapeDesc*, NxAllocatorDefault>::begin() [member function]
Excluded: NxShapeDesc * const * NxArray<NxShapeDesc*, NxAllocatorDefault>::begin() const [member function]
Excluded: NxShapeDesc * * NxArray<NxShapeDesc*, NxAllocatorDefault>::end() [member function]
Excluded: NxShapeDesc * const * NxArray<NxShapeDesc*, NxAllocatorDefault>::end() const [member function]
Excluded: NxShapeDesc * * NxArray<NxShapeDesc*, NxAllocatorDefault>::copy(NxShapeDesc * const * f, NxShapeDesc * const * l, NxShapeDesc * * p) [member function]
Excluded: NxShapeDesc * * NxArray<NxShapeDesc*, NxAllocatorDefault>::allocate(size_t n) [member function]
Excluded: NxShapeDesc * * NxArray<NxShapeDesc*, NxAllocatorDefault>::reallocate(size_t n, NxShapeDesc * * old) [member function]

WARNING: void NxUtilLib::NxSegmentPlaneIntersect(NxVec3 const & v1, NxVec3 const & v2, NxPlane const & plane, NxReal & dist, NxVec3 & pointOnPlane) [member function]
> execution error W1009: The function takes as argument (name=dist, pos=3) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: bool NxUtilLib::NxRayPlaneIntersect(NxRay const & ray, NxPlane const & plane, NxReal & dist, NxVec3 & pointOnPlane) [member function]
> execution error W1009: The function takes as argument (name=dist, pos=2) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: bool NxUtilLib::NxRaySphereIntersect(NxVec3 const & origin, NxVec3 const & dir, NxReal length, NxVec3 const & center, NxReal radius, NxReal & hit_time, NxVec3 & hit_pos) [member function]
> execution error W1009: The function takes as argument (name=hit_time, pos=5) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: NxU32 NxUtilLib::NxRayAABBIntersect2(NxVec3 const & min, NxVec3 const & max, NxVec3 const & origin, NxVec3 const & dir, NxVec3 & coord, NxReal & t) [member function]
> execution error W1009: The function takes as argument (name=t, pos=5) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: bool NxUtilLib::NxRayTriIntersect(NxVec3 const & orig, NxVec3 const & dir, NxVec3 const & vert0, NxVec3 const & vert1, NxVec3 const & vert2, float & t, float & u, float & v, bool cull) [member function]
> execution error W1009: The function takes as argument (name=t, pos=5) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: bool NxUtilLib::NxRayTriIntersect(NxVec3 const & orig, NxVec3 const & dir, NxVec3 const & vert0, NxVec3 const & vert1, NxVec3 const & vert2, float & t, float & u, float & v, bool cull) [member function]
> execution error W1009: The function takes as argument (name=u, pos=6) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: bool NxUtilLib::NxRayTriIntersect(NxVec3 const & orig, NxVec3 const & dir, NxVec3 const & vert0, NxVec3 const & vert1, NxVec3 const & vert2, float & t, float & u, float & v, bool cull) [member function]
> execution error W1009: The function takes as argument (name=v, pos=7) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: bool NxUserWheelContactModify::onWheelContact(NxWheelShape * wheelShape, NxVec3 & contactPoint, NxVec3 & contactNormal, NxReal & contactPosition, NxReal & normalForce, NxShape * otherShape, NxMaterialIndex & otherShapeMaterialIndex, NxU32 otherShapeFeatureIndex) [member function]
> execution error W1009: The function takes as argument (name=contactPosition, pos=3) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: bool NxUserWheelContactModify::onWheelContact(NxWheelShape * wheelShape, NxVec3 & contactPoint, NxVec3 & contactNormal, NxReal & contactPosition, NxReal & normalForce, NxShape * otherShape, NxMaterialIndex & otherShapeMaterialIndex, NxU32 otherShapeFeatureIndex) [member function]
> execution error W1009: The function takes as argument (name=normalForce, pos=4) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: bool NxUserWheelContactModify::onWheelContact(NxWheelShape * wheelShape, NxVec3 & contactPoint, NxVec3 & contactNormal, NxReal & contactPosition, NxReal & normalForce, NxShape * otherShape, NxMaterialIndex & otherShapeMaterialIndex, NxU32 otherShapeFeatureIndex) [member function]
> execution error W1009: The function takes as argument (name=otherShapeMaterialIndex, pos=6) non-const reference to Python
> immutable type - function could not be called from Python. Take a look on "Function Transformation" functionality and
> define the transformation.

WARNING: NxCompartmentType [enumeration]
> execution error W1032: Boost.Python library does not support enums with duplicate values. You can read more about this
> here: http://boost.org/libs/python/todo.html#support-for-enums-with-duplicate-values . The quick work around is to add new
> class variable to the exported enum, from Python.

WARNING: NxSimulationStatus [enumeration]
> execution error W1032: Boost.Python library does not support enums with duplicate values. You can read more about this
> here: http://boost.org/libs/python/todo.html#support-for-enums-with-duplicate-values . The quick work around is to add new
> class variable to the exported enum, from Python.

WARNING: void NxSpringAndDamperEffector::getLinearSpring(NxReal & distCompressSaturate, NxReal & distRelaxed, NxReal & distStretchSaturate, NxReal & maxCompressForce, NxReal & maxStretchForce) [member function]
> execution error W1009: The function takes as argument (name=distCompressSaturate, pos=0) non-const reference to Python
> immutable type - function could not be called from Python. Take a look on "Function Transformation" functionality and
> define the transformation.

WARNING: void NxSpringAndDamperEffector::getLinearSpring(NxReal & distCompressSaturate, NxReal & distRelaxed, NxReal & distStretchSaturate, NxReal & maxCompressForce, NxReal & maxStretchForce) [member function]
> execution error W1009: The function takes as argument (name=distRelaxed, pos=1) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxSpringAndDamperEffector::getLinearSpring(NxReal & distCompressSaturate, NxReal & distRelaxed, NxReal & distStretchSaturate, NxReal & maxCompressForce, NxReal & maxStretchForce) [member function]
> execution error W1009: The function takes as argument (name=distStretchSaturate, pos=2) non-const reference to Python
> immutable type - function could not be called from Python. Take a look on "Function Transformation" functionality and
> define the transformation.

WARNING: void NxSpringAndDamperEffector::getLinearSpring(NxReal & distCompressSaturate, NxReal & distRelaxed, NxReal & distStretchSaturate, NxReal & maxCompressForce, NxReal & maxStretchForce) [member function]
> execution error W1009: The function takes as argument (name=maxCompressForce, pos=3) non-const reference to Python
> immutable type - function could not be called from Python. Take a look on "Function Transformation" functionality and
> define the transformation.

WARNING: void NxSpringAndDamperEffector::getLinearSpring(NxReal & distCompressSaturate, NxReal & distRelaxed, NxReal & distStretchSaturate, NxReal & maxCompressForce, NxReal & maxStretchForce) [member function]
> execution error W1009: The function takes as argument (name=maxStretchForce, pos=4) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxSpringAndDamperEffector::getLinearDamper(NxReal & velCompressSaturate, NxReal & velStretchSaturate, NxReal & maxCompressForce, NxReal & maxStretchForce) [member function]
> execution error W1009: The function takes as argument (name=velCompressSaturate, pos=0) non-const reference to Python
> immutable type - function could not be called from Python. Take a look on "Function Transformation" functionality and
> define the transformation.

WARNING: void NxSpringAndDamperEffector::getLinearDamper(NxReal & velCompressSaturate, NxReal & velStretchSaturate, NxReal & maxCompressForce, NxReal & maxStretchForce) [member function]
> execution error W1009: The function takes as argument (name=velStretchSaturate, pos=1) non-const reference to Python
> immutable type - function could not be called from Python. Take a look on "Function Transformation" functionality and
> define the transformation.

WARNING: void NxSpringAndDamperEffector::getLinearDamper(NxReal & velCompressSaturate, NxReal & velStretchSaturate, NxReal & maxCompressForce, NxReal & maxStretchForce) [member function]
> execution error W1009: The function takes as argument (name=maxCompressForce, pos=2) non-const reference to Python
> immutable type - function could not be called from Python. Take a look on "Function Transformation" functionality and
> define the transformation.

WARNING: void NxSpringAndDamperEffector::getLinearDamper(NxReal & velCompressSaturate, NxReal & velStretchSaturate, NxReal & maxCompressForce, NxReal & maxStretchForce) [member function]
> execution error W1009: The function takes as argument (name=maxStretchForce, pos=3) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: bool NxSoftBody::raycast(NxRay const & worldRay, NxVec3 & hit, NxU32 & vertexId) [member function]
> execution error W1009: The function takes as argument (name=vertexId, pos=2) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxSoftBody::getShapePointers(NxShape * * shapePointers, NxU32 * flags) [member function]
> warning W1051: The function takes as argument (name=shapePointers, pos=0) "NxShape * *" type. You have to specify a call
> policies or to use "Function Transformation" functionality.

WARNING: void NxSoftBody::setShapePointers(NxShape * * shapePointers, unsigned int numShapes) [member function]
> warning W1051: The function takes as argument (name=shapePointers, pos=0) "NxShape * *" type. You have to specify a call
> policies or to use "Function Transformation" functionality.

WARNING: bool NxCloth::raycast(NxRay const & worldRay, NxVec3 & hit, NxU32 & vertexId) [member function]
> execution error W1009: The function takes as argument (name=vertexId, pos=2) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxCloth::getShapePointers(NxShape * * shapePointers, NxU32 * flags=0) [member function]
> warning W1051: The function takes as argument (name=shapePointers, pos=0) "NxShape * *" type. You have to specify a call
> policies or to use "Function Transformation" functionality.

WARNING: void NxCloth::setShapePointers(NxShape * * shapePointers, unsigned int numShapes) [member function]
> warning W1051: The function takes as argument (name=shapePointers, pos=0) "NxShape * *" type. You have to specify a call
> policies or to use "Function Transformation" functionality.

WARNING: void NxCompartment::getTiming(NxReal & maxTimestep, NxU32 & maxIter, NxTimeStepMethod & method, NxU32 * numSubSteps=0) const [member function]
> execution error W1009: The function takes as argument (name=maxTimestep, pos=0) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxCompartment::getTiming(NxReal & maxTimestep, NxU32 & maxIter, NxTimeStepMethod & method, NxU32 * numSubSteps=0) const [member function]
> execution error W1009: The function takes as argument (name=maxIter, pos=1) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxCompartment::getTiming(NxReal & maxTimestep, NxU32 & maxIter, NxTimeStepMethod & method, NxU32 * numSubSteps=0) const [member function]
> execution error W1009: The function takes as argument (name=method, pos=2) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: NxU32 NxPhysicsSDK::getInternalVersion(NxU32 & apiRev, NxU32 & descRev, NxU32 & branchId) const [member function]
> execution error W1009: The function takes as argument (name=apiRev, pos=0) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: NxU32 NxPhysicsSDK::getInternalVersion(NxU32 & apiRev, NxU32 & descRev, NxU32 & branchId) const [member function]
> execution error W1009: The function takes as argument (name=descRev, pos=1) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: NxU32 NxPhysicsSDK::getInternalVersion(NxU32 & apiRev, NxU32 & descRev, NxU32 & branchId) const [member function]
> execution error W1009: The function takes as argument (name=branchId, pos=2) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxJoint::getActors(NxActor * * actor1, NxActor * * actor2) [member function]
> warning W1051: The function takes as argument (name=actor1, pos=0) "NxActor * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: void NxJoint::getActors(NxActor * * actor1, NxActor * * actor2) [member function]
> warning W1051: The function takes as argument (name=actor2, pos=1) "NxActor * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: void NxJoint::getBreakable(NxReal & maxForce, NxReal & maxTorque) [member function]
> execution error W1009: The function takes as argument (name=maxForce, pos=0) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxJoint::getBreakable(NxReal & maxForce, NxReal & maxTorque) [member function]
> execution error W1009: The function takes as argument (name=maxTorque, pos=1) non-const reference to Python immutable type
> - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: bool NxJoint::getNextLimitPlane(NxVec3 & planeNormal, NxReal & planeD, NxReal * restitution=0) [member function]
> execution error W1009: The function takes as argument (name=planeD, pos=1) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxConvexMesh::getMassInformation(NxReal & mass, NxMat33 & localInertia, NxVec3 & localCenterOfMass) const [member function]
> execution error W1009: The function takes as argument (name=mass, pos=0) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxTriangleMesh::getMassInformation(NxReal & mass, NxMat33 & localInertia, NxVec3 & localCenterOfMass) const [member function]
> execution error W1009: The function takes as argument (name=mass, pos=0) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: NxU32 NxScene::getCompartmentArray(NxCompartment * * userBuffer, NxU32 bufferSize, NxU32 & usersIterator) const [member function]
> warning W1051: The function takes as argument (name=userBuffer, pos=0) "NxCompartment * *" type. You have to specify a call
> policies or to use "Function Transformation" functionality.

WARNING: NxU32 NxScene::getCompartmentArray(NxCompartment * * userBuffer, NxU32 bufferSize, NxU32 & usersIterator) const [member function]
> execution error W1009: The function takes as argument (name=usersIterator, pos=2) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: NxU32 NxScene::getActorGroupPairArray(NxActorGroupPair * userBuffer, NxU32 bufferSize, NxU32 & userIterator) const [member function]
> execution error W1009: The function takes as argument (name=userIterator, pos=2) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxScene::getFilterOps(NxFilterOp & op0, NxFilterOp & op1, NxFilterOp & op2) const [member function]
> execution error W1009: The function takes as argument (name=op0, pos=0) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxScene::getFilterOps(NxFilterOp & op0, NxFilterOp & op1, NxFilterOp & op2) const [member function]
> execution error W1009: The function takes as argument (name=op1, pos=1) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxScene::getFilterOps(NxFilterOp & op0, NxFilterOp & op1, NxFilterOp & op2) const [member function]
> execution error W1009: The function takes as argument (name=op2, pos=2) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: NxActiveTransform * NxScene::getActiveTransforms(NxU32 & nbTransformsOut) [member function]
> execution error W1009: The function takes as argument (name=nbTransformsOut, pos=0) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: NxU32 NxScene::getIslandArrayFromActor(NxActor & actor, NxActor * * userBuffer, NxU32 bufferSize, NxU32 & userIterator) [member function]
> warning W1051: The function takes as argument (name=userBuffer, pos=1) "NxActor * *" type. You have to specify a call
> policies or to use "Function Transformation" functionality.

WARNING: NxU32 NxScene::getIslandArrayFromActor(NxActor & actor, NxActor * * userBuffer, NxU32 bufferSize, NxU32 & userIterator) [member function]
> execution error W1009: The function takes as argument (name=userIterator, pos=3) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: NxU32 NxScene::getMaterialArray(NxMaterial * * userBuffer, NxU32 bufferSize, NxU32 & usersIterator) [member function]
> warning W1051: The function takes as argument (name=userBuffer, pos=0) "NxMaterial * *" type. You have to specify a call
> policies or to use "Function Transformation" functionality.

WARNING: NxU32 NxScene::getMaterialArray(NxMaterial * * userBuffer, NxU32 bufferSize, NxU32 & usersIterator) [member function]
> execution error W1009: The function takes as argument (name=usersIterator, pos=2) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxScene::getTiming(NxReal & maxTimestep, NxU32 & maxIter, NxTimeStepMethod & method, NxU32 * numSubSteps=0) const [member function]
> execution error W1009: The function takes as argument (name=maxTimestep, pos=0) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxScene::getTiming(NxReal & maxTimestep, NxU32 & maxIter, NxTimeStepMethod & method, NxU32 * numSubSteps=0) const [member function]
> execution error W1009: The function takes as argument (name=maxIter, pos=1) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxScene::getTiming(NxReal & maxTimestep, NxU32 & maxIter, NxTimeStepMethod & method, NxU32 * numSubSteps=0) const [member function]
> execution error W1009: The function takes as argument (name=method, pos=2) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: bool NxScene::raycastAnyShape(NxRay const & worldRay, NxShapesType shapesType, NxU32 groups=0x0ffffffff, NxReal maxDist=3.4028234663852885981170418348451692544e+38, NxGroupsMask const * groupsMask=0, NxShape * * cache=0) const [member function]
> warning W1051: The function takes as argument (name=cache, pos=5) "NxShape * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: NxShape * NxScene::raycastClosestShape(NxRay const & worldRay, NxShapesType shapeType, NxRaycastHit & hit, NxU32 groups=0x0ffffffff, NxReal maxDist=3.4028234663852885981170418348451692544e+38, NxU32 hintFlags=0x0ffffffff, NxGroupsMask const * groupsMask=0, NxShape * * cache=0) const [member function]
> warning W1051: The function takes as argument (name=cache, pos=7) "NxShape * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: NxU32 NxScene::overlapSphereShapes(NxSphere const & worldSphere, NxShapesType shapeType, NxU32 nbShapes, NxShape * * shapes, NxUserEntityReport<NxShape*> * callback, NxU32 activeGroups=0x0ffffffff, NxGroupsMask const * groupsMask=0, bool accurateCollision=false) [member function]
> warning W1051: The function takes as argument (name=shapes, pos=3) "NxShape * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: NxU32 NxScene::overlapAABBShapes(NxBounds3 const & worldBounds, NxShapesType shapeType, NxU32 nbShapes, NxShape * * shapes, NxUserEntityReport<NxShape*> * callback, NxU32 activeGroups=0x0ffffffff, NxGroupsMask const * groupsMask=0, bool accurateCollision=false) [member function]
> warning W1051: The function takes as argument (name=shapes, pos=3) "NxShape * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: NxU32 NxScene::overlapOBBShapes(NxBox const & worldBox, NxShapesType shapeType, NxU32 nbShapes, NxShape * * shapes, NxUserEntityReport<NxShape*> * callback, NxU32 activeGroups=0x0ffffffff, NxGroupsMask const * groupsMask=0, bool accurateCollision=false) [member function]
> warning W1051: The function takes as argument (name=shapes, pos=3) "NxShape * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: NxU32 NxScene::overlapCapsuleShapes(NxCapsule const & worldCapsule, NxShapesType shapeType, NxU32 nbShapes, NxShape * * shapes, NxUserEntityReport<NxShape*> * callback, NxU32 activeGroups=0x0ffffffff, NxGroupsMask const * groupsMask=0, bool accurateCollision=false) [member function]
> warning W1051: The function takes as argument (name=shapes, pos=3) "NxShape * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: NxU32 NxScene::cullShapes(NxU32 nbPlanes, NxPlane const * worldPlanes, NxShapesType shapeType, NxU32 nbShapes, NxShape * * shapes, NxUserEntityReport<NxShape*> * callback, NxU32 activeGroups=0x0ffffffff, NxGroupsMask const * groupsMask=0) [member function]
> warning W1051: The function takes as argument (name=shapes, pos=4) "NxShape * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: bool NxUserContactModify::onContactConstraint(NxU32 & changeFlags, NxShape const * shape0, NxShape const * shape1, unsigned int const featureIndex0, unsigned int const featureIndex1, NxUserContactModify::NxContactCallbackData & data) [member function]
> execution error W1009: The function takes as argument (name=changeFlags, pos=0) non-const reference to Python immutable
> type - function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxUserNotify::onWake(NxActor * * actors, NxU32 count) [member function]
> warning W1051: The function takes as argument (name=actors, pos=0) "NxActor * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: void NxUserNotify::onSleep(NxActor * * actors, NxU32 count) [member function]
> warning W1051: The function takes as argument (name=actors, pos=0) "NxActor * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: bool NxUserEntityReport<NxShape*>::onEvent(NxU32 nbEntities, NxShape * * entities) [member function]
> warning W1051: The function takes as argument (name=entities, pos=1) "NxShape * *" type. You have to specify a call
> policies or to use "Function Transformation" functionality.

WARNING: void NxVec3::set(NxF32 const * v) [member function]
> execution error W1010: The function introduces registration order problem. For more information about the problem read next
> document: http://language-binding.net/pyplusplus/documentation/functions/registration_order.html Problematic functions
> list:          void NxVec3::set(NxReal v) [member function]

WARNING: void NxVec3::set(NxReal v) [member function]
> execution error W1010: The function introduces registration order problem. For more information about the problem read next
> document: http://language-binding.net/pyplusplus/documentation/functions/registration_order.html Problematic functions
> list:          void NxVec3::set(NxF32 const * v) [member function]

WARNING: void NxQuat::getAngleAxis(NxReal & angle, NxVec3 & axis) const [member function]
> execution error W1009: The function takes as argument (name=angle, pos=0) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: static void NxMath::sinCos(NxF32 f, NxF32 & s, NxF32 & c) [member function]
> execution error W1009: The function takes as argument (name=s, pos=1) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: static void NxMath::sinCos(NxF32 f, NxF32 & s, NxF32 & c) [member function]
> execution error W1009: The function takes as argument (name=c, pos=2) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: static void NxMath::sinCos(NxF64 a, NxF64 & s, NxF64 & c) [member function]
> execution error W1009: The function takes as argument (name=s, pos=1) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: static void NxMath::sinCos(NxF64 a, NxF64 & s, NxF64 & c) [member function]
> execution error W1009: The function takes as argument (name=c, pos=2) non-const reference to Python immutable type -
> function could not be called from Python. Take a look on "Function Transformation" functionality and define the
> transformation.

WARNING: void NxArray<NxShapeDesc*, NxAllocatorDefault>::insert(NxShapeDesc * * where, unsigned int n, NxShapeDesc * const & x) [member function]
> warning W1051: The function takes as argument (name=where, pos=0) "NxShapeDesc * *" type. You have to specify a call
> policies or to use "Function Transformation" functionality.

WARNING: void NxArray<NxShapeDesc*, NxAllocatorDefault>::erase(NxShapeDesc * * from, NxShapeDesc * * to) [member function]
> warning W1051: The function takes as argument (name=from, pos=0) "NxShapeDesc * *" type. You have to specify a call
> policies or to use "Function Transformation" functionality.

WARNING: void NxArray<NxShapeDesc*, NxAllocatorDefault>::erase(NxShapeDesc * * from, NxShapeDesc * * to) [member function]
> warning W1051: The function takes as argument (name=to, pos=1) "NxShapeDesc * *" type. You have to specify a call policies
> or to use "Function Transformation" functionality.

WARNING: void NxArray<NxShapeDesc*, NxAllocatorDefault>::erase(NxShapeDesc * * from) [member function]
> warning W1051: The function takes as argument (name=from, pos=0) "NxShapeDesc * *" type. You have to specify a call
> policies or to use "Function Transformation" functionality.

WARNING: void NxRemoteDebugger::writeParameter(NxReal const & parameter, void * object, bool create, char const * name, NxU32 mask) [member function]
> warning W1044: Py++ created an ugly alias ("writeParameter_b50e9ef8956c46e675a5e7f008b9dba4") for function wrapper.

WARNING: void NxRemoteDebugger::writeParameter(unsigned int const & parameter, void * object, bool create, char const * name, NxU32 mask) [member function]
> warning W1044: Py++ created an ugly alias ("writeParameter_33a30e372c5a9d5913199818f4f0454e") for function wrapper.

WARNING: void NxRemoteDebugger::writeParameter(NxVec3 const & parameter, void * object, bool create, char const * name, NxU32 mask) [member function]
> warning W1044: Py++ created an ugly alias ("writeParameter_18b35e05d928635c0bfa5253d447a842") for function wrapper.

WARNING: void NxRemoteDebugger::writeParameter(NxPlane const & parameter, void * object, bool create, char const * name, NxU32 mask) [member function]
> warning W1044: Py++ created an ugly alias ("writeParameter_1659a6d9ec055830dc916179d6d14d2a") for function wrapper.

WARNING: void NxRemoteDebugger::writeParameter(NxMat34 const & parameter, void * object, bool create, char const * name, NxU32 mask) [member function]
> warning W1044: Py++ created an ugly alias ("writeParameter_3812119651c0f11b4ac08702ef96ec3c") for function wrapper.

WARNING: void NxRemoteDebugger::writeParameter(NxMat33 const & parameter, void * object, bool create, char const * name, NxU32 mask) [member function]
> warning W1044: Py++ created an ugly alias ("writeParameter_0b09a6446f1afac75d162902da79b1ce") for function wrapper.

WARNING: void NxRemoteDebugger::writeParameter(NxU8 const * parameter, void * object, bool create, char const * name, NxU32 mask) [member function]
> warning W1044: Py++ created an ugly alias ("writeParameter_04860cd33646aae9fd095b0c3ae34ece") for function wrapper.

WARNING: void NxRemoteDebugger::writeParameter(char const * parameter, void * object, bool create, char const * name, NxU32 mask) [member function]
> warning W1044: Py++ created an ugly alias ("writeParameter_0da5c0005a7bc75f48cd10b0b38fafa0") for function wrapper.

WARNING: void NxRemoteDebugger::writeParameter(bool const & parameter, void * object, bool create, char const * name, NxU32 mask) [member function]
> warning W1044: Py++ created an ugly alias ("writeParameter_40b26414dbb0b437ce5c428512b98e77") for function wrapper.

WARNING: void NxRemoteDebugger::writeParameter(void const * parameter, void * object, bool create, char const * name, NxU32 mask) [member function]
> warning W1044: Py++ created an ugly alias ("writeParameter_7df00078d56d1bb262d4e9659c58bab9") for function wrapper.

WARNING: _Nx3F32 [struct]
> execution error W1040: The declaration is unexposed, but there are other declarations, which refer to it. This could cause
> "no to_python converter found" run time error. Declarations:   NxVec3::NxVec3(Nx3F32 const & d) [constructor]  NxVec3 const
> & NxVec3::operator=(Nx3F32 const & d) [member operator]

INFO: file "NxTireFunctionDesc.pypp.cpp" - updated( 0.000000 seconds )
Source code was updated( 0.310500 minutes ).
