// ---------------------------------------------- Begin: Rain system ---------------------------------------------
// The rain system is an example of the usage of observers, handlers and emission of techniques.
// ---------------------------------------------------------------------------------------------------------------
system rainSystem_1
{
	fast_forward							1 1

	// Rain
    technique
    {
		renderer							Billboard
		{
			billboard_type					oriented_self
			billboard_origin				top_center
		}

		material							ParticleUniverse/Rain_01
		default_particle_width				2
		default_particle_height				100
		visual_particle_quota				1000

		// This is the emitter that emits the rain
		emitter								Box
		{
			emission_rate					300
			position						0 500 0
			angle							1
			direction						0.2 -1 0
			velocity						2500
			time_to_live					20
			box_em_height					1
			box_em_width					1000
			box_em_depth					1000
		}

		// Handle when the raindrop hits the floor
		observer							OnPosition
		{
			// Handle in case the particle positions´ y-value < -195
			position_y						less_than -195

			handler							DoPlacementParticle
			{
				force_emitter				CircleEmitter
				number_of_particles			1
			}
			handler							DoPlacementParticle
			{
				force_emitter				SplashEmitter
				number_of_particles			1
			}
			handler							DoExpire {}
		}
	}
	
	// Circles
	technique
	{
		// Use the billboard renderer defined in the *.pua script
		use_alias							$flatBillboardRenderer

		material							ParticleUniverse/Circle
		default_particle_width				1
		default_particle_height				1
		visual_particle_quota				500
		emitter								Point					CircleEmitter
		{
			emission_rate					0
			angle							0
			direction						0 0 0
			velocity						0
			time_to_live					dyn_random
			{
				min							1
				max							2
			}
		}

		affector							Scale
		{
			xyz_scale						40
		}
	}
	
	// Splashes
	technique
	{
		// Use the billboard renderer defined in the *.pua script
		use_alias							$defaultBillboardRenderer

		material							Examples/Flare
		default_particle_width				5
		default_particle_height				5
		visual_particle_quota				500
		emitted_emitter_quota				50

		emitter								Point					SplashEmitter
		{
			emission_rate					0
			emits							emitter_particle		Splash
			time_to_live					dyn_random
			{
				min							0.01
				max							0.05
			}
		}

		emitter								Point					Splash
		{
			emission_rate					80
			angle							20
			direction						0 1 0
			velocity						dyn_random
			{
				min							120
				max							180
			}
			time_to_live					1
		}

		observer							OnPosition
		{
			// Only observe the visual particles that are emitted
			observe_particle_type			visual_particle

			// Handle in case the particle positions´ y-value < -200
			position_y						less_than -200
			handler							DoExpire {}
		}

		affector							LinearForce
		{
			force_aff_vector				0 -600 0
		}
	}
}
// ----------------------------------------------- End: Rain system ----------------------------------------------


// ---------------------------------------------- Begin: Rain system_2 ---------------------------------------------
// The rain system in a simplified form. It doesn't put splashes/circles on the exact position where 
// the rain touches the floor, but on random positions. This gives a performance improvement and the
// inaccuracy is not noticable.
// ---------------------------------------------------------------------------------------------------------------
system rainSystem_2
{
	fast_forward							1 1

	// Rain
    technique
    {
		renderer							Billboard
		{
			billboard_type					oriented_self
			billboard_origin				top_center
		}

		material							ParticleUniverse/Rain_01
		default_particle_width				2
		default_particle_height				100
		visual_particle_quota				1000

		// This is the emitter that emits the rain
		emitter								Box
		{
			emission_rate					300
			position						0 500 0
			angle							1
			direction						0.2 -1 0
			velocity						2500
			time_to_live					20
			box_em_height					1
			box_em_width					1000
			box_em_depth					1000
		}

		// Only expire when the raindrop hits the floor
		observer							OnPosition
		{
			// Handle in case the particle positions´ y-value < -195
			position_y						less_than -195

			handler							DoExpire {}
		}
	}

	// Circles
	technique
	{
		// Use the billboard renderer defined in the *.pua script
		use_alias							$flatBillboardRenderer

		material							ParticleUniverse/Circle
		default_particle_width				1
		default_particle_height				1
		visual_particle_quota				500

		emitter								Box
		{
			position						0 -195 0
			emission_rate					300
			box_em_height					1
			box_em_width					1000
			box_em_depth					1000
			angle							0
			direction						0 0 0
			velocity						0
			time_to_live					dyn_random
			{
				min							1
				max							2
			}
		}

		affector							Scale
		{
			xyz_scale						40
		}
	}

	// Splashes
	technique
	{
		position							0 -195 0
		
		// Use the billboard renderer defined in the *.pua script
		use_alias							$defaultBillboardRenderer

		material							Examples/Flare
		default_particle_width				5
		default_particle_height				5
		visual_particle_quota				500
		emitted_emitter_quota				50

		emitter								Box						SplashEmitter
		{
			emission_rate					50
			box_em_height					1
			box_em_width					1000
			box_em_depth					1000
			emits							emitter_particle		Splash
			time_to_live					dyn_random
			{
				min							0.01
				max							0.05
			}
		}

		emitter								Point					Splash
		{
			emission_rate					80
			angle							20
			direction						0 1 0
			velocity						dyn_random
			{
				min							120
				max							180
			}
			time_to_live					1
		}

		observer							OnPosition
		{
			// Only observe the visual particles that are emitted
			observe_particle_type			visual_particle

			// Handle in case the particle positions´ y-value < -200
			position_y						less_than -200
			handler							DoExpire {}
		}

		affector							LinearForce
		{
			force_aff_vector				0 -600 0
		}
	}
}
// ----------------------------------------------- End: Rain system_2 ----------------------------------------------
