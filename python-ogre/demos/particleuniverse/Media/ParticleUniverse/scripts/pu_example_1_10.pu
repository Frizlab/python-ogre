// ---------------------------------------------------------------------------------------------------------------
// Define some aliasses for convenience
// ---------------------------------------------------------------------------------------------------------------
alias									$PointEmitter
{
	emitter								Point
	{
		emission_rate					50
		angle							25
		direction						0 1 0
		velocity						220
		time_to_live					3
	}
}
alias									$LinearForce
{
	affector							LinearForce
	{
		force_aff_vector				0 -100 0
	}
}
// ---------------------------------------------------------------------------------------------------------------
// example_001:
// - fixed_timeout
// - nonvisible_update_timeout
// - iteration_interval
// - use emitter and affector alias
// Example will present shocking movement, because the iteration_interval is set high
// ---------------------------------------------------------------------------------------------------------------
system example_001
{
	fixed_timeout						10
	nonvisible_update_timeout			3
	iteration_interval					0.1
	technique
	{
		// Use the billboard renderer defined in the *.pua script
		use_alias						$defaultBillboardRenderer
		material						ParticleUniverse/GreenBall
		default_particle_width			20
		default_particle_height			20
		visual_particle_quota			500
		use_alias						$PointEmitter
		use_alias						$LinearForce
	}
}
// ---------------------------------------------------------------------------------------------------------------
// example_002:
// - duration
// - repeat/delay
// ---------------------------------------------------------------------------------------------------------------
system example_002
{
	technique
	{
		// Use the billboard renderer defined in the *.pua script
		use_alias						$defaultBillboardRenderer
		material						ParticleUniverse/Hart
		default_particle_width			50
		default_particle_height			50
		visual_particle_quota			500
		emitter							Point
		{
			// Disable the emitter initially. The repeat_delay will enable it again after ´x´ seconds.
			enabled						false
			emission_rate				50
			duration					dyn_random
			{
				min						0.1
				max						3
			}
			repeat_delay				dyn_random
			{
				min						0.1
				max						3
			}
			angle						25
			direction					0 1 0
			velocity					220
			time_to_live				3
		}
		use_alias						$LinearForce
	}
}
// ---------------------------------------------------------------------------------------------------------------
// example_003:
// - position
// See how position of the technique, emitter and the SceneNode are combined.
// ---------------------------------------------------------------------------------------------------------------
system example_003
{
	scale 0.5 0.5 0.5
	scale_velocity 0.5
	technique
	{
		position						500 0 0
		material						ParticleUniverse/GreenBall
		default_particle_width			20
		default_particle_height			20
		visual_particle_quota			500
		// Use the billboard renderer defined in the *.pua script
		use_alias						$defaultBillboardRenderer
		emitter							Point
		{
			position					0 200 0
			emission_rate				50
			angle						25
			direction					0 1 0
			velocity					200
			time_to_live				40
			duration					2
		}
		affector						Gravity
		{
			position					-500 400 0
			gravity						50000
		}
	}
}

// ---------------------------------------------------------------------------------------------------------------
// example_004:
// - Sphere surface emitter
// - Colour Affector
// ---------------------------------------------------------------------------------------------------------------
system example_004
{
	technique
	{
		// Use the billboard renderer defined in the *.pua script
		use_alias						$defaultBillboardRenderer
		material						ParticleUniverse/Star
		default_particle_width			20
		default_particle_height			20
		visual_particle_quota			1500
		emitter							SphereSurface
		{
			position					0 200 0
			sphere_surface_em_radius	100
			emission_rate				250
			velocity					0
			time_to_live				1.8
		}
		affector						Colour
		{
			colour_aff_time_colour		0 1 1 0 1
			colour_aff_time_colour		1 1 0 0 0
		}
		affector						Gravity
		{
			position					0 200 0
			gravity						5000
		}
	}
}

// ---------------------------------------------------------------------------------------------------------------
// example_005:
// - Vertex emitter
// The particles are emitted along the outline of the mesh. If all particles are gone, the particle system stops.
// ---------------------------------------------------------------------------------------------------------------
system example_005
{
	scale								5 5 5
	scale_velocity						5
	technique
	{
		// Use the billboard renderer defined in the *.pua script
		use_alias						$defaultBillboardRenderer
		material						ParticleUniverse/Star
		default_particle_width			5
		default_particle_height			5
		visual_particle_quota			1500
		emitter							Vertex
		{
			vertex_em_mesh_name			athene.mesh
			vertex_em_step				30
			vertex_em_segments			5
			vertex_em_iterations		5
			position					0 0 0
			emission_rate				400
			angle						360
			direction					0 1 0
			velocity					2
			time_to_live				7
		}
		observer						OnClear
		{
			handler						DoStopSystem {}
		}
		affector						Colour
		{
			colour_aff_time_colour		0 1 1 0
			colour_aff_time_colour		1 0 0 0
		}
	}
}

// ---------------------------------------------------------------------------------------------------------------
// example_006:
// - Entity Renderer
// ---------------------------------------------------------------------------------------------------------------
system example_006
{
	technique
	{
		default_particle_width			80
		default_particle_height			80
		default_particle_depth			10
		visual_particle_quota			10
		material						ParticleUniverse/Crate

		renderer						Entity
		{
			entity_renderer_mesh_name	WoodPallet.mesh
		}
		
		emitter							Point
		{
			emission_rate				5
			angle						40
			direction					0 1 0
			velocity					300
			time_to_live				10
		}
		
		affector						LinearForce
		{
			force_aff_vector			0 -100 0
		}
		affector						Align
		{
		}
	}
}

// ---------------------------------------------------------------------------------------------------------------
// example_007:
// - emitted emitters
// This is the Particle Universe version of Ogre's fireworks particle system
// ---------------------------------------------------------------------------------------------------------------
system example_007
{
	technique
	{
		default_particle_width			10
		default_particle_height			10
		visual_particle_quota			1000
		emitted_emitter_quota			10
		use_alias						$defaultBillboardRenderer
		material						Examples/Flare

		emitter							Box
		{
			emits						emitter_particle	explosion
			angle						20
			emission_rate				1000
			direction					0 1 0
			velocity					260
			time_to_live				3
		}

		emitter							Point				explosion
		{
			enabled						false
			angle						360
			emission_rate				1000
			time_to_live				2
			direction					0 1 0
			velocity					80
			duration					0.1
			repeat_delay				dyn_random
			{
				min						2
				max						3
			}
		}

		affector						LinearForce
		{
			force_aff_vector			0 -100 0
			force_aff_application		add
		}

		affector						Colour
		{
			colour_aff_time_colour		0 1 1 0
			colour_aff_time_colour		0.5 1 0 0
			colour_aff_time_colour		0.9 0 0 1
			colour_aff_time_colour		1 0 0 0
		}
	}
}
// ---------------------------------------------------------------------------------------------------------------
// example_008:
// - OnQuota observer
// This particle system emits visual particles until the visual particle quota has been reached. This activates
// the event handler, which disables the emitter from further emission of particles. This way the emitter only
// emits the number of particles defined by the quota and then stops.
// ---------------------------------------------------------------------------------------------------------------
system example_008
{
	technique
	{
		// Use the billboard renderer defined in the *.pua script
		use_alias						$defaultBillboardRenderer
		
		material						ParticleUniverse/Hart
		default_particle_width			50
		default_particle_height			50
		visual_particle_quota			200

		emitter							Point myPointEmitter
		{
			emission_rate				100
			angle						25
			direction					0 1 0
			velocity					220
			time_to_live				5
		}

		observer						OnQuota
		{
			observe_particle_type		visual_particle
			handler						DoEnableComponent
			{
				enable_component		emitter_component myPointEmitter false
			}
		}

		use_alias						$LinearForce
	}
}
// ---------------------------------------------------------------------------------------------------------------
// example_009:
// - Circle emitter
// ---------------------------------------------------------------------------------------------------------------
system example_009
{
	technique
	{
		// Use the billboard renderer defined in the *.pua script
		use_alias						$defaultBillboardRenderer
		material						ParticleUniverse/GreenBall
		default_particle_width			10
		default_particle_height			10
		visual_particle_quota			5000
		emitter							Circle
		{
			emission_rate				1000
			auto_direction				true
			time_to_live				5
			circle_em_radius			100
			circle_em_random			false
			circle_em_step				0.2
			velocity					70
		}
		affector						SineForce
		{
			force_aff_vector			0 80 0
			sinef_aff_frequency_min		5
			sinef_aff_frequency_max		5
		}
	}
}
// ---------------------------------------------------------------------------------------------------------------
// example_010:
// - Circle emitter
// ---------------------------------------------------------------------------------------------------------------
system example_010
{
	technique
	{
		use_alias						$defaultBillboardRenderer
		material						ParticleUniverse/Star
		default_particle_width			20
		default_particle_height			20
		visual_particle_quota			2000
		emitter							Circle
		{
			emission_rate				300
			direction					0 1 0
			time_to_live				4
			circle_em_radius			100
			velocity					20
		}
		affector						Colour
		{
			colour_aff_time_colour		0 0 1 0
			colour_aff_time_colour		0.8 0 0 1
			colour_aff_time_colour		1 0 0 0
		}
		affector						Jet
		{
			jet_aff_accel				dyn_random
			{
				min						0.1
				max						1
			}
		}
	}
}
