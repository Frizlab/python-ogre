#! /usr/bin/python
# Copyright 2006 Lakin Wecker
# Distributed under the Boost Software License, Version 1.0. (See
# accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

import os
import sys
import ogre_settings


build_dir = ogre_settings.build_dir

#Import( 'env' )
#SharedLibrary( target='Ogre', SHLIBPREFIX='.so', .... )

env = Environment(ENV=os.environ)

# Using distcc can really speed up the compile
if os.path.exists('/usr/lib/distcc'):
    os.environ['PATH'] = '/usr/lib/distcc:' + os.environ['PATH']
    env['ENV']['DISTCC_HOSTS'] = os.environ['DISTCC_HOSTS']
    env['ENV']['PATH'] = os.environ['PATH']

def get_ccflags():
    CCFLAGS = ' `pkg-config --cflags OGRE` '
    CCFLAGS += ' -I' + ogre_settings.python_headers_dir + ' -D"BOOST_PYTHON_MAX_ARITY=19"'
    CCFLAGS += ' -O0 -g -I./'
    return CCFLAGS

def get_source_files():
    source_files = filter( lambda s: s.endswith( '.cpp' ), os.listdir(build_dir) )
    source_files.sort()
    return map( lambda fname: os.path.join( build_dir, fname ), source_files )


def get_libs():
    LINKFLAGS = ' `pkg-config --libs OGRE` '
    LINKFLAGS += ' -lboost_python'
    return LINKFLAGS


local_env = env.Copy()
local_env.Append( LINKFLAGS=get_libs() )
local_env.Append( CPPPATH=[ build_dir ] )
local_env.Append( CCFLAGS=get_ccflags() )

_Ogre_ = local_env.SharedLibrary( target='Ogre', SHLIBPREFIX=''
                                       , source=get_source_files() )

if sys.platform == 'win32':
    Ogre_so_dll = os.path.join( build_dir, 'ogre-vc71-mt-1_2.dll' )
else:
    Ogre_so_dll = os.path.join( build_dir, 'ogre-gcc-1_2.so' )


local_env.Install( 'Ogre', [_Ogre_] )

# vim:et:ts=4:sw=4:sts=4
