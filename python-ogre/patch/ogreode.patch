Index: include/OgreOdeEntityInformer.h
===================================================================
--- include/OgreOdeEntityInformer.h	(revision 2510)
+++ include/OgreOdeEntityInformer.h	(working copy)
@@ -36,12 +36,12 @@
 		const TriangleIndex* getIndices();
 		unsigned int getIndexCount();
 
+		bool getBoneVertices(unsigned char bone,unsigned int &vertex_count, Ogre::Vector3* &vertices);
 	protected:
         void addVertexData(const Ogre::VertexData *vertex_data, 
             const Ogre::VertexData *blended_data = 0, 
             const Ogre::Mesh::IndexMap *indexMap = 0);
 		void addIndexData(Ogre::IndexData *data, const unsigned int offset = 0);
-		bool getBoneVertices(unsigned char bone,unsigned int &vertex_count, Ogre::Vector3* &vertices);
 
 		Ogre::Entity*		_entity;
 		Ogre::SceneNode*	_node;
Index: src/OgreOdeGeometry.cpp
===================================================================
--- src/OgreOdeGeometry.cpp	(revision 2510)
+++ src/OgreOdeGeometry.cpp	(working copy)
@@ -924,7 +924,7 @@
 
 	_data = dGeomTriMeshDataCreate(); 
 
-	dGeomTriMeshDataBuildSimple(_data,(const dReal*)_vertices, (int)vertex_count, _indices, (int) index_count); 
+	dGeomTriMeshDataBuildSimple(_data,(const dReal*)_vertices, (int)vertex_count, /*(const int *)*/_indices, (int) index_count); 
 
 	_geom = dCreateTriMesh(getSpaceID(space),_data,0,0,0);
 	registerGeometry();
Index: src/OgreOdeTriangleMeshDataManager.cpp
===================================================================
--- src/OgreOdeTriangleMeshDataManager.cpp	(revision 2510)
+++ src/OgreOdeTriangleMeshDataManager.cpp	(working copy)
@@ -6,7 +6,7 @@
 using namespace Ogre;
 using namespace OgreOde; 
 
-template<> TriangleMeshDataManager *Ogre::Singleton<TriangleMeshDataManager>::ms_Singleton = 0;
+template<> OgreOde::TriangleMeshDataManager * Ogre::Singleton<OgreOde::TriangleMeshDataManager>::ms_Singleton = 0;
 
 namespace OgreOde
 {
Index: prefab/src/OgreOdeRagdoll.cpp
===================================================================
--- prefab/src/OgreOdeRagdoll.cpp	(revision 2512)
+++ prefab/src/OgreOdeRagdoll.cpp	(working copy)
@@ -10,6 +10,7 @@
 
 #include "OgreOde_Prefab.h"
 #include "OgreOdeRagdoll.h"
+#include "OgreAlignedAllocator.h"
 
 using namespace Ogre;
 using namespace OgreOde;
@@ -734,4 +735,4 @@
 void RagdollFactory::destroyInstance( MovableObject* obj)
 {
 	delete obj;
-} 
\ No newline at end of file
+} 
Index: loader/include/OgreOdeDotLoader.h
===================================================================
--- loader/include/OgreOdeDotLoader.h	(revision 2510)
+++ loader/include/OgreOdeDotLoader.h	(working copy)
@@ -15,8 +15,8 @@
         DotLoader(OgreOde::World * world = 0, OgreOde::Space * space = 0);
 		~DotLoader(){};
 
-        void setWorld(OgreOde::World * world)  {_world = world;};
-        void setSpace(OgreOde::Space * space)  {_space = space;};
+        void setWorld(OgreOde::World * world);//  {_world = world;};
+        void setSpace(OgreOde::Space * space);//  {_space = space;};
 
         ObjectList  *load(const Ogre::String &filename, const Ogre::StringVector &objects_names, const Ogre::StringVector &instance_names);
         void         save(const Ogre::String &filename, const Ogre::StringVector &objects_names, ObjectList  *objects);
Index: loader/src/OgreOdeDotLoader.cpp
===================================================================
--- loader/src/OgreOdeDotLoader.cpp	(revision 2510)
+++ loader/src/OgreOdeDotLoader.cpp	(working copy)
@@ -62,6 +62,12 @@
 {
 
 }
+
+void DotLoader::setWorld(OgreOde::World * world)  
+{_world = world;};
+void DotLoader::setSpace(OgreOde::Space * space)  
+{_space = space;};
+
 //------------------------------------------------------------------------------------------------
 ObjectList  *DotLoader::load(const String &filename, const StringVector &objects_names, const StringVector &instance_names)
 {
