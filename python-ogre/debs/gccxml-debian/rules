#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

BUILDDIR=build


CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

configure: configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.
	dh_installdirs
	test -d $(BUILDDIR) || mkdir $(BUILDDIR)
	cd $(BUILDDIR); cmake ../ -DCMAKE_INSTALL_PREFIX:PATH=../debian/gccxml/usr -DGCCXML_DOC_DIR:STRING=/share/doc/gccxml

	touch configure-stamp


build: build-stamp

build-stamp: configure-stamp 
	dh_testdir

	# Add here commands to compile the package.
	cd $(BUILDDIR); $(MAKE)
	chrpath -d build/bin/gccxml build/bin/gccxml_cc1plus

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.
	#-$(MAKE) clean
	rm -rf $(BUILDDIR)

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 

	# Add here commands to install the package into debian/gccxml.
	cd $(BUILDDIR); $(MAKE) install
	ln -s gccxml.1 $(CURDIR)/debian/gccxml/usr/share/man/man1/gccxml_cc1plus.1

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs README
	dh_installexamples
#	dh_install
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_python
#	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
